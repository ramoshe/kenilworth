---
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1); // remove the first "/"
---
<label class="hamburger-menu">
  <input type="checkbox">
</label>
<aside class="sidebar">
  <nav class="nav">
    <ul class="nav-menu">
      <li class="menu-item"><a href="/" class={currentPath === "" ? "active" : ""}>Home</a></li>
      <li class="menu-item"><a href="/history" class={currentPath === "history" ? "active" : ""}>History</a></li>
      <li class="menu-item"><a href="/events" class={currentPath === "events" ? "active" : ""}>Events</a></li>
      <li class="menu-item"><a href="/resources" class={currentPath === "resources" ? "active" : ""}>Resources</a></li>
      <li class="menu-item"><a href="/board" class={currentPath === "board" ? "active" : ""}>Board</a></li>
      <li class="menu-item"><a href="/#contact" class={currentPath === "contact" ? "active" : ""}>Contact</a></li>
    </ul>
  </nav>
</aside>

<style>
  *, *::after, *::before {
    box-sizing: border-box;
  }
  :root {
    --bar-width: 60px;
    --bar-height: 6px;
    --hamburger-gap: 6px;
    --foreground: var(--primary-dark);
    --background: var(--gray-light);
    --hamburger-margin: 20px;
    --animation-timing: 200ms ease-in-out;
    --hamburger-height: calc(var(--bar-height)*3 + var(--hamburger-gap)*2);
  }
  .hamburger-menu {
    --x-width: calc(var(--hamburger-height) * 1.41421356237);
    display: flex;
    flex-direction: column;
    gap: var(--hamburger-gap);
    width: max-content;
    position: absolute;
    top: var(--hamburger-margin);
    left: var(--hamburger-margin);
    z-index: 2;
    cursor: pointer;
  }
  .hamburger-menu:has(input:checked) {
    --foreground: var(--gray);
    --background: var(--primary-dark);
  }
  .hamburger-menu:has(input:focus-visible)::before,
  .hamburger-menu:has(input:focus-visible)::after,
  .hamburger-menu input:focus-visible {
    border: 1px solid var(--background);
    box-shadow: 0 0 0 1px var(--foreground);
  }
  .hamburger-menu::before,
  .hamburger-menu::after,
  .hamburger-menu input {
    content: "";
    width: var(--bar-width);
    height: var(--bar-height);
    background-color: var(--foreground);
    border-radius: 100px;
    transform-origin: left center;
    transition: opacity var(--animation-timing), width var(--animation-timing), rotate var(--animation-timing), translate var(--animation-timing), background-color var(--animation-timing);
  }
  .hamburger-menu input {
    appearance: none;
    padding: 0;
    margin: 0;
    outline: none;
    pointer-events: none;
  }
  .hamburger-menu:has(input:checked)::before {
    rotate: 45deg;
    width: var(--x-width);
    translate: 0 calc(var(--bar-height)/-2);
  }
  .hamburger-menu:has(input:checked)::after {
    rotate: -45deg;
    width: var(--x-width);
    translate: 0 calc(var(--bar-height)/2);
  }
  .hamburger-menu input:checked {
    opacity: 0;
    width: 0;
  }
  .sidebar {
    transition: translate var(--animation-timing);
    translate: -100%;
    padding: .5rem 1rem;
    padding-top: calc(var(--hamburger-height) + var(--hamburger-margin) + 1rem);
    background-color: var(--foreground);
    color: var(--background);
    min-width: 50vw;
    min-height: 100vh;
    position: absolute;
  }
  .hamburger-menu:has(input:checked) + .sidebar {
    translate: 0;
  }
  .nav-menu {
    list-style-type: none;
    margin: 0;
    padding: 0;
  }
  .menu-item {
    padding: 2em;
  }
  .menu-item a {
    color: inherit;
    text-decoration: none;
    font-size: 1.2em;
  }
  .menu-item a.active {
    color: var(--gray);
    font-weight: 900;
    font-style: italic;
    border-bottom: 4px solid var(--primary-light);
  }
</style>